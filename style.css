/* idk */

@import url('https://fonts.googleapis.com/css2?family=Lexend&display=swap');
/* to change the font to a custom one, use google fonts.
you will need a little bit of css experience, so you might want to learn it for just one second... */

:root {
	/* global (no light/dark mode specific because... its kinda stupid */
	--font: "lexend";

	/* light mode specific */
	--color-bg: #ddd;
	--color-text: #1b1b1b;
	/* button colors */
	--color-button-default-nohover: #00ccff;
	--color-text-button-default-nohover: #00ccff;
	--color-button-default-hover: #00ccff;
	--color-text-button-default-hover: #000;

	--image-background-bg: url("img/whatlight.svg"); /* light mode background */

	--image-profile-logo: url('https://avatars.githubusercontent.com/u/75321465?v=4') /* light mode profile logo */

}
@media(prefers-color-scheme: dark) {
	:root {
		/* dark mode specific */
		--color-bg: #1b1b1b;
		--color-text: #ddd;
		/* button colors */
		--color-button-default-nohover: #0090b4;
		--color-text-button-default-nohover: #0090b4;
		--color-button-default-hover: #0090b4;
		--color-text-button-default-hover: #fff;

		/* --image-background-bg: url("img/whatdark.svg"); */
		--image-background-bg: url('img/whatdark.svg');
		/* dark mode background */

		--image-profile-logo: url('https://avatars.githubusercontent.com/u/75321465?v=4'); /* dark mode profile logo */
	}
}

/* don't edit anything below, unless you know what you're doing. */

* {
	font-family: lexend !important;
	font-weight: 400;
	text-align: center;

	scroll-behavior: smooth;
}

body {
	background-color: var(--color-bg);
	background-image: var(--image-background-bg);
	/* background-image: url('img/f.png'); */
	background-size: cover; /* This makes the image cover the entire background */
	background-position: center; /* This centers the background image */
	color: var(--color-text);
}

#profile-logo {
	border-radius: 10ex;
	content: var(--image-profile-logo);
}

/* button */

/* custom style */

.button--anim-left-to-right::before {
	transform: skew(0deg, 0) translate(-90%);
}
a .button--anim-left-to-right:hover::before {
	transform: skew(0deg, 0) translate(-10%);
}

.button--anim-right-to-left::before {
	/* TODO: more accurate value? */
	transform: skew(0deg, 0) translate(73%);
}
a .button--anim-right-to-left:hover::before {
	transform: skew(0deg, 0) translate(0%);
}

/* FIXME */
/* .button--anim-bottom-to-top::before {
    transform: skew(0deg, 89deg) translate(100%);
}
a:hover .button--anim-bottom-to-top::before {
    transform: skew(0deg, 89deg) translate(0%);
} */

.button--anim-left-to-right-full::before {
	transform: skew(0deg, 0) translate(-100%);
}
a .button--anim-left-to-right-full:hover::before {
	transform: skew(0deg, 0) translate(0%);
}

.button--anim-right-to-left-full::before {
	transform: skew(0deg, 0) translate(100%);
}
a .button--anim-right-to-left-full:hover::before {
	transform: skew(0deg, 0) translate(0%);
}


.button--anim-skew-left::before {
    transform: skew(-70deg, 0) translate(-110%);
}

a .button--anim-skew-left:hover::before {
    transform: skew(-70deg, 0) translate(-10%);
}

.button--anim-skew-right::before {
    transform: skew(70deg, 0) translate(-110%);
}

a .button--anim-skew-right:hover::before {
    transform: skew(70deg, 0) translate(-10%);
}

.button--anim-skew-translate-in::before {
    transform: skew(70deg, 0) translate(100%);
}

a .button--anim-skew-translate-in:hover::before {
    transform: skew(70deg, 0) translate(-5%);
}

.button--anim-skew-translate-out::before {
    transform: skew(-70deg, 0) translate(100%);
}

a .button--anim-skew-translate-out:hover::before {
    transform: skew(-70deg, 0) translate(-5%);
}


.uppercase {
	text-transform: uppercase;
}


/* the actual styles */

button {
	box-sizing: inherit;
	font-weight: 900;
	letter-spacing: 1px;
	background-color: transparent;
	color: var(--color-text-button-default-nohover);
	border: 1px solid var(--color-button-default-nohover);
	cursor: pointer;
	padding: 15px 15px;
	width: 100%;
	transition: background-color 200ms, color 200ms;
	margin-left: auto;
	margin-right: auto;
	margin-bottom: 10px;

	/* display: block; */
	z-index: 20;
	position: relative;
	overflow: hidden;

	text-decoration: none;
}

button::before{
	content: '';
	position: absolute;
	display: block;
	width: 120%;
	height: 100%;
	/* background-color: #ff862c; */
	background-color: var(--color-button-default-hover);
	left: 0;
	top: 0;
	z-index: 0;
	transition: transform 300ms;
}
button h1 {
	position: relative;
	display: block;
	z-index: 100;
}
button img {
	position: relative;
	display: inline-block;
	z-index: 100;
}
/* a:hover button::before {} */
a {
	text-decoration: none;
}
a button:hover {
	color: #fff;
	background-color: #00ccff;
	background-color: inherit;
}

@media (min-width: 668px) {
	button {
		max-width: 340px;
	}
}

@media (min-width: 820px) {
	button {
		display: inline;
	}
}